{"version":3,"file":"static\\development\\pages\\api\\graphql.js","sources":["webpack:///webpack/bootstrap","webpack:///./core/contentful.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./pages/api/graphql.js","webpack:///external \"contentful\"","webpack:///external \"graphql\"","webpack:///external \"regenerator-runtime\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { createClient } from 'contentful';\r\n\r\nexport const CONTENT_TYPE_POST = 'post';\r\nexport const CONTENT_TYPE_PERSON = 'author';\r\nexport const CONTENT_TYPE_BANNER = 'banner';\r\n\r\nconst query = `{\r\n  post {\r\n    items {\r\n      title\r\n    }\r\n  }\r\n}`;\r\nconst Space = process.env.CONTENTFUL_SPACE_ID;\r\nconst Token = process.env.CONTENTFUL_ACCESS_TOKEN;\r\nexport class ContentfulService {\r\n  createClientInstance() {\r\n    return createClient({\r\n      space: Space,\r\n      accessToken: Token\r\n    }); \r\n  }\r\n\r\n  async fetchPostById(sysId) {\r\n    const client = this.createClientInstance();\r\n    return await client.getEntries({\r\n      content_type: CONTENT_TYPE_POST,\r\n      'sys.id': sysId\r\n    });\r\n  }\r\n\r\n  async getBannerEntries() {\r\n    try {\r\n      const client = this.createClientInstance();\r\n      const contents = await client.getEntries({\r\n        content_type: CONTENT_TYPE_BANNER\r\n      });\r\n      const entries = contents.items\r\n        .map(({ fields }) => ({\r\n          bannerImage: fields.bannerImage.fields.file.url\r\n        }));\r\n\r\n      return { entries };\r\n    } catch (error) {\r\n      // TODO: add error handling\r\n    }\r\n  }\r\n  // async restFetch(){\r\n  //   fetch(`https://graphql.contentful.com/content/v1/spaces/${Space}`,{\r\n  //     method:\"POST\",\r\n  //     headers : {\r\n  //       \"content-type\":\"application/json\",\r\n  //       authorization:`Bearer ${Token}`\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       query\r\n  //     })\r\n  //   }).then(res =>res.json())\r\n  //   .then(response=>{\r\n  //     console.log(response)\r\n  //   })\r\n  // }\r\n  async getPostEntries(\r\n    { limit, skip, tag } = {\r\n      limit: 5,\r\n      skip: 0,\r\n      tag: ''\r\n    }\r\n  ) {\r\n    try {\r\n      const client = this.createClientInstance();\r\n      const contents = await client.getEntries({\r\n        // include: 1,\r\n        // limit,\r\n        // skip,\r\n        // 'sys.id': tag,\r\n        content_type: CONTENT_TYPE_POST,\r\n        // order: 'fields.publishDate',\r\n      });\r\n      const entries = contents.items\r\n        .map(({ sys, fields }) => ({\r\n          id: sys.id,\r\n          title: fields.title,\r\n          author: {\r\n            fullName:fields.author.fields.fullName,\r\n            avatar:fields.author.fields.avatar.fields.file.url\r\n          },\r\n          description: fields.description,\r\n          image: fields.image.fields.file.url,\r\n          publishedAt: fields.publishDate\r\n        }));\r\n\r\n      const total = contents.total;\r\n\r\n      return { entries, total, limit, skip };\r\n    } catch (error) {\r\n      // TODO: add error handling\r\n    }\r\n  }\r\n\r\n  async getPostById(postId) {\r\n    try {\r\n      const content = await this.fetchPostById(postId);\r\n\r\n      const entry = content.items[0];\r\n\r\n      return {\r\n          id: entry.sys.id,\r\n          title: entry.fields.title,\r\n          author: {\r\n            fullName:entry.fields.author.fields.fullName,\r\n            avatar:entry.fields.author.fields.avatar.fields.file.url\r\n          },\r\n          description: entry.fields.description,\r\n          image: entry.fields.image.fields.file.url,\r\n          publishedAt: entry.fields.publishDate\r\n      };\r\n    } catch (error) {\r\n        // TODO: add error handling\r\n    }\r\n  }\r\n}","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = require(\"regenerator-runtime\");\n","import { graphql, buildSchema } from \"graphql\";\r\nimport { ContentfulService } from '../../core/contentful';\r\n\r\nconst schema = buildSchema(`\r\ntype Author {\r\n    fullName: String,\r\n    avatar: String\r\n}\r\ntype Article {\r\n    id: String,\r\n    title: String,         \r\n    author: Author,\r\n    description: String,\r\n    image: String,\r\n    publishedAt: String\r\n}\r\ntype Query {\r\n    articles: [Article],\r\n    article(id:String): Article\r\n  }\r\n`);\r\n\r\nconst root = { \r\n    articles: async () =>{\r\n        const contentfulService = new ContentfulService();\r\n        const { entries } = await contentfulService.getPostEntries();\r\n        return entries;\r\n    },\r\n    article: async (id) =>{\r\n        const contentfulService = new ContentfulService();\r\n        const entries = await contentfulService.getPostById(id);\r\n        return entries;\r\n    }\r\n};\r\n\r\nexport default async (req, res) => {\r\n  const query = req.body.query;\r\n  const response = await graphql(schema, query, root);\r\n\r\n  return res.end(JSON.stringify(response));\r\n};","module.exports = require(\"contentful\");","module.exports = require(\"graphql\");","module.exports = require(\"regenerator-runtime\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAWA;AACA;AAFA;AACA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAlBA;AAAA;AAoBA;AADA;AACA;AApBA;AAmBA;AAGA;AACA;AAAA;AACA;AADA;AAAA;AAvBA;AA2BA;AAAA;AACA;AA5BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAiDA;AACA;AACA;AAHA;AAhDA;AAuDA;AAvDA;AAAA;AAyDA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAzDA;AAwDA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AATA;AAAA;AAYA;AA7EA;AA+EA;AAAA;AAAA;AAAA;AAAA;AACA;AAhFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAuFA;AAEA;AAzFA;AA4FA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AATA;AACA;AA5FA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAmBA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}