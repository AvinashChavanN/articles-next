{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action } from 'mobx';\nimport { ContentfulService } from \"../core/contentful\";\nvar ArticleStore = (_class = (_temp = /*#__PURE__*/function () {\n  function ArticleStore() {\n    var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ArticleStore);\n\n    _initializerDefineProperty(this, \"article\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"articles\", _descriptor2, this);\n\n    this.article = initialData.article;\n  }\n\n  _createClass(ArticleStore, [{\n    key: \"fetch\",\n    value: function fetch(id) {\n      var contentfulService, entry;\n      return _regeneratorRuntime.async(function fetch$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              contentfulService = new ContentfulService();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(contentfulService.getPostById(id));\n\n            case 3:\n              entry = _context.sent;\n              this.setArticle(entry);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetchAllArticles\",\n    value: function fetchAllArticles() {\n      var contentfulService, _await$contentfulServ, entries;\n\n      return _regeneratorRuntime.async(function fetchAllArticles$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              contentfulService = new ContentfulService();\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(contentfulService.getPostEntries());\n\n            case 3:\n              _await$contentfulServ = _context2.sent;\n              entries = _await$contentfulServ.entries;\n              this.setArticles(entries);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setArticle\",\n    value: function setArticle(article) {\n      this.article = article;\n    }\n  }, {\n    key: \"setArticles\",\n    value: function setArticles(entries) {\n      this.articles = entries;\n    }\n  }]);\n\n  return ArticleStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"article\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"articles\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setArticle\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setArticle\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setArticles\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setArticles\"), _class.prototype)), _class);\nexport default ArticleStore;","map":{"version":3,"sources":["C:/Users/M1059011/Desktop/Tasks/modern-web-articles/store/ArticleStore.js"],"names":["observable","action","ContentfulService","ArticleStore","initialData","article","id","contentfulService","getPostById","entry","setArticle","getPostEntries","entries","setArticles","articles"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;IAEMC,Y;AAIJ,0BAA8B;AAAA,QAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAAA;;AAC5B,SAAKC,OAAL,GAAeD,WAAW,CAACC,OAA3B;AACD;;;;0BAEWC,E;;;;;;AACJC,cAAAA,iB,GAAoB,IAAIL,iBAAJ,E;;+CACNK,iBAAiB,CAACC,WAAlB,CAA8BF,EAA9B,C;;;AAAdG,cAAAA,K;AACN,mBAAKC,UAAL,CAAgBD,KAAhB;;;;;;;;;;;;;;;;;;AAGMF,cAAAA,iB,GAAoB,IAAIL,iBAAJ,E;;+CACFK,iBAAiB,CAACI,cAAlB,E;;;;AAAjBC,cAAAA,O,yBAAAA,O;AACP,mBAAKC,WAAL,CAAiBD,OAAjB;;;;;;;;;;;+BAGiBP,O,EAAS;AAC1B,WAAKA,OAAL,GAAeA,OAAf;AACD;;;gCACmBO,O,EAAS;AAC3B,WAAKE,QAAL,GAAgBF,OAAhB;AACD;;;;oFAvBAZ,U;;;;;WAAqB,I;;4EACrBA,U;;;;;WAAsB,I;;+DAiBtBC,M,mJAGAA,M;AAKH,eAAeE,YAAf","sourcesContent":["import { observable, action } from 'mobx';\r\n\r\nimport { ContentfulService } from \"../core/contentful\";\r\n\r\nclass ArticleStore {\r\n  @observable article = null;\r\n  @observable articles = null;\r\n\r\n  constructor(initialData = {}) {\r\n    this.article = initialData.article;\r\n  }\r\n\r\n  async fetch(id) {\r\n    const contentfulService = new ContentfulService();\r\n    const entry = await contentfulService.getPostById(id);\r\n    this.setArticle(entry);\r\n }\r\n async fetchAllArticles() {\r\n    const contentfulService = new ContentfulService();\r\n    const {entries} = await contentfulService.getPostEntries();\r\n    this.setArticles(entries);\r\n }\r\n\r\n  @action setArticle(article) {\r\n    this.article = article;\r\n  }\r\n  @action setArticles(entries) {\r\n    this.articles = entries;\r\n  }\r\n}\r\n\r\nexport default ArticleStore;"]},"metadata":{},"sourceType":"module"}